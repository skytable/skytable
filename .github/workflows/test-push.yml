name: Test (push)

on:
  push:
    branches:
      - "!v*"
      - "**"

env:
  IS_ACTIONS_DOC: "false"
jobs:
  tests-pass:
    name: Tier 1 Tests
    runs-on: ubuntu-latest
    needs:
      - test_64bit
      - test_32bit
    steps:
      - name: Finish Tier 1 Tests
        run: exit 0
  test_64bit:
    name: Test (64-bit)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            rust: x86_64-pc-windows-msvc

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Install GNU tar
        run: |
          brew install gnu-tar
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH
        if: runner.os == 'macOS'
      - name: Install perl modules
        uses: perl-actions/install-with-cpanm@v1
        with:
          install: "HTML::Entities"
      - name: Setup environment
        run: |
          chmod +x ci/setvars.sh
          ci/setvars.sh

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.rust }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.rust }}-cargo-registry-
      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ matrix.rust }}-cargo-index-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.rust }}-cargo-index-
      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ matrix.rust }}-target-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.rust }}-target-

      - name: Install Rust
        run: |
          rustup default stable
          rustup target add ${{ matrix.rust }}

      - name: Publish docs
        env:
          BOT_USER: ${{ secrets.BOT_INIT_USER }}
          BOT_MAIL: ${{ secrets.BOT_INIT_MAIL }}
          BOT_API: ${{ secrets.BOT_API_CALL }}
          GIT_SHA: ${{ env.GITHUB_SHA }}
        run: |
          chmod +x ci/doc.sh
          ci/doc.sh
        if: runner.os == 'Linux' && env.IS_ACTIONS_DOC == 'true'

      - name: Run Tests
        run: make test
        env:
          RUST_BACKTRACE: 1
          TARGET: ${{ matrix.rust }}

      - name: Archive artifacts
        run: |
          mkdir dist
          cargo build --target ${{ matrix.rust }}
          mv target/${{ matrix.rust }}/debug/skyd target/${{ matrix.rust }}/debug/skysh target/${{ matrix.rust }}/debug/sky-bench dist
        if: runner.os != 'Windows'

      - name: Archive artifacts
        shell: cmd
        run: |
          cargo build --target ${{ matrix.rust }}
          rm -rf dist
          mkdir dist
          move target\${{ matrix.rust }}\debug\*.exe dist
        env:
          RUSTFLAGS: -Ctarget-feature=+crt-static
        if: runner.os == 'Windows'

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-${{ matrix.rust }}-builds.zip
          path: dist
  test_32bit:
    name: Test (32-bit)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        include:
          - os: windows-latest
            rust: i686-pc-windows-msvc
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup environment
        run: |
          chmod +x ci/setvars.sh
          ci/setvars.sh
      - name: Install perl modules
        uses: perl-actions/install-with-cpanm@v1
        with:
          install: "HTML::Entities"

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.rust }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.rust }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ matrix.rust }}-cargo-index-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.rust }}-cargo-index-

      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ matrix.rust }}-target-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ matrix.rust }}-target-

      - name: Install Rust
        run: |
          rustup default stable
          rustup target add ${{ matrix.rust }}

      - name: Run Tests
        run: make test
        env:
          RUST_BACKTRACE: 1
          TARGET: ${{ matrix.rust }}

      - name: Archive artifacts
        run: |
          mkdir dist
          cargo build --target ${{ matrix.rust }}
          mv target/${{ matrix.rust }}/debug/skyd target/${{ matrix.rust }}/debug/skysh target/${{ matrix.rust }}/debug/sky-bench dist
        if: runner.os == 'Linux'

      - name: Archive artifacts
        shell: cmd
        run: |
          cargo build --target ${{ matrix.rust }}
          rm -rf dist
          mkdir dist
          move target\${{ matrix.rust }}\debug\*.exe dist
        env:
          RUSTFLAGS: -Ctarget-feature=+crt-static
        if: runner.os == 'Windows'

      - name: Save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}-${{ matrix.rust }}-builds.zip
          path: dist
